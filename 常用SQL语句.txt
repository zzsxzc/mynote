基本:
	创建数据库
	CREATE DATABASE shop;
	创建表
	CREATE TABLE Product(
	product_id CHAR(4) PRIMARY_KEY NOTNULL,
	product_type VARCHAR(100) NOT NULL,
	product_type VARCHAR(32) NOT NULL,
	sale_price INTEGER,
	purchase_price DATE
	);
	删除表
	DROP TABLE Product;
	修改表定义
	ALTER TABLE Product ADD COLUMN product_name_pinyin VARCHAR(100);
	ALTER TABLE Product DROP COLUMN product_name_pinyin;
	插入数据
	INSERT INTO people (name,nickname) values ("张三","阿三");
	查询语句
	SELECt * FROM Product;
	给列设置别名
	SELECT product_id AS id FROM Product;
	设置中外文别名要加双引号
	select product_name AS "品名" FROM Product;
	查询常数
	SELECT '商品' AS string,38 AS number,'2009-02-04' AS date,product_id,product_name FROM Product;
	去重
	SELECT DISTINCT product_type FROM product;
	WHERE关键字
	SELECT product_name FROM Product WHERE product_type ='衣服'
	SUM关键字
	SELECT SUM(sale_price),SUM(purchase_price) FROM Product;
	AVG关键字
	SELECT AVG(sale_price),AVG(purchase_price) FROM Product;
	MAX MIN
	SELECT COUNT(DISTINCT product_type) FROM Product;
	分组
	SELECT product_type,COUNT(*) FROM Product GROUP BY product_type;
	SELECT purchase_price,COUNT(*) FROM Product WHERE product_type='衣服' GROUP BY purchase_price;
	HAVING子句
	SELECT product_type,COUNT(*) FORM Product GROUP BY product_type HAVING COUNT(*)=2;
	ASC 升序 DESC 降序 默认时升序 可以指定多个排序键
	SELECT product_id, product_name, sale_price, purchase_price FROM Product ORDER BY sale_price DESC;
	从其他表中复制数据
	INSERT INTO ProductCopy(product_id,product_name,product_type,sale_price,purchase_price,regist_date)
	SELECT product_id ,product_name,product_type,sale_price,purchase_price,regist_date FROM PRODUCT
	删除表中全部数据，但是不删除表结构
	DELETE FROM Product;
	数据更新UPDATE
	UPDATE Product SET regist_date ='2009-10-10';
	UPDATE Product SET sale_price = sale_price * 10 WHERE product_type='厨房用具'
	事务 针对mysql
	开始事务 START TRANSACTION
	回滚 ROLL BACK
	提交事务 COMMIT
	视图
	创建视图 也可以以视图为基础创建视图
	CREATE VIEW ProductSum(product_type,cnt_product) AS SELECT product_type,cnt_product) AS SELECT product_type,COUNT(*) FROM Product GROUP BY product_type;
	使用视图
	SELECT product_type,cnt_product FROM ProductSum;
	删除视图
	DROP VIEW ProductSum;
	子查询 可以理解为一张一次性视图  我理解为一次中间查询，或者说为其他查询做基础的查询
	SELECT product_type,cnt_product FROM (SELECT product_type,COUNT(*) AS cnt_product FROM Product GROUP BY product_type) AS ProductSum; 
	关联子查询(有空研究sql各语句的执行顺序)
	查询所有商品中单价超出其所属商品种类平均价格的商品
	SELECT product_type,product_name,sale_price FROM Product AS P1 WHERE sale_price > (SELECT AVG(sale_price) FORM Product AS P2 WHERE P1.product_type = P2.product_type GROUP BY product_type);
	函数、谓词
	集合运算
	表的相加UNION 
	SELECT product_id ,product_name FROM Product UNION SELECT product_id,product_name FROM Product2;
	包含重复行
	SELECT product_id ,product_name FROM Product UNION ALL SELECT product_id,product_name FROM Product2;
	选取表中公共部分
	SELECT product_id ,product_name FROM Product INTERSECT SELECT product_id,product_name FROM Product2;
	从表A中去掉与表B重复的部分
	SELECT product_id ,product_name FROM Product EXCEPT SELECT product_id,product_name FROM Product2;
	联结 JOIN
	内联结 A B中 A中某个元素等于B中某个元素
	SELECT SP.shop_id,SP.shop_name,SP.product_id,P.product_name,P.sale_price FROM ShopProduct AS SP INNER JOIN Product AS P ON SP.product_id = P.product_id;
	外联结(以两个表其中一个为基准)
	左外链接
	SELECT SP.shop_id,SP.shop_name,SP.product_id,P.product_name,P.sale_price FROM ShopProduct AS SP LEFT OUTER JOIN Product AS P ON SP.product_id = P.product_id;
	右外链接
	SELECT SP.shop_id,SP.shop_name,SP.product_id,P.product_name,P.sale_price FROM ShopProduct AS SP RIGHT OUTER JOIN Product AS P ON SP.product_id = P.product_id;

特殊:
    1.查询表中某个字段重复的数据
    SELECT * FROM tablename a WHERE (a.name) IN (SELECT * FORM tablename GROUP BY name HAVING COUNT(*) > 1);


