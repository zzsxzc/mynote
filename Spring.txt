JavaEE部分
Spring
1、说一下IOC和AOP https://www.zhihu.com/search?type=content&q=IOC%E5%92%8CAOP
	主要用到的设计模式有工厂模式和代理模式
	ioc,控制反转,将对象的控制权交给容器.
aop切面编程
2、介绍一下bean的生命周期
	（1）实例化（必须的）构造函数构造对象
	（2）装配（可选的）为属性赋值
	（3）回调（可选的）（容器-控制类和组件-回调类）
	（4）初始化(init-method=" ")
	（5）就绪
	（6）销毁（destroy-method=" "） 
3、autowired和resource区别
	@Autowired是默认按照类型装配的 @Resource默认是按照名称装配的配
4、@Controller和@RestController的区别？
	@RestController注解相当于@ResponseBody ＋ @Controller合在一起的作用
5、依赖注入的方式有几种，哪几种？  mmmm
	构造方法注入、setter方法注入、接口注入
6、springIOC原理？自己实现IOC要怎么做，哪些步骤？

7、Spring中BeanFactory和ApplicationContext的区别？
	ApplicationContext具有比BeanFactory更加丰富的功能。
8、什么是IoC和DI？DI是如何实现的？
	IOC和DI其实是一个概念。
9、请问Spring中Bean的作用域有哪些？
	Spring中Bean有五种scope，singleton prototype request session globalSession
	1 singleton为默认值，IOC容器中仅存在一个Bean实例，Bean都以单例模式存在
	2 prototype，在每次请求获取Bean的时候，都会创建一个新的实例，它在容器初始化的时候不会创建实例，采用的是延迟加载的形式注入Bean，当你使用的时候，才会进行实例化，每次实例化获取的对象都不是同一个 就像BeanFactory的实例化模式 实例不唯一
	3 request，在每一次http请求时会创建一个实例，该实例仅在当前http request有效
	4 session，在每一次http请求时会创建一个实例，该实例仅在当前http session有效
	5 globalSession，全局Session，供不同的portlet共享，portlet好像是类似于servlet的Web组件
10、谈谈Spring中自动装配的方式有哪些？
	no：不进行自动装配，手动设置Bean的依赖关系。
	byName：根据Bean的名字进行自动装配。
	byType：根据Bean的类型进行自动装配。
	constructor：类似于byType，不过是应用于构造器的参数，如果正好有一个Bean与构造器的参数类型相同则可以自动装配，否则会导致错误。
	autodetect：如果有默认的构造器，则通过constructor的方式进行自动装配，否则使用byType的方式进行自动装配
11、aop的应用场景？
	日志
	异常处理
	安全
12、AOP的原理是什么？
	利用代理模式
13、你如何理解AOP中的连接点（Joinpoint）、切点（Pointcut）、增强（Advice）、引介（Introduction）、织入（Weaving）、切面（Aspect）这些概念？
	连接点：程序执行的的某个特定位置
	切点:查询条件，根据切点找到连接点
	增强:织入到目标连接点上的一段程序代码
	引介:特殊的增强,为类添加一些属性和方法。
	织入:将增强添加到连接点的过程
	切面:和连接点同义
14、Spring支持的事务管理类型有哪些？你在项目中使用哪种方式？
	编程式事务 硬编码的形式
	声明式事务 基于AOP 配置的形式
15、介绍一下spring？
	IOC和AOP 核心是IOC，另外最重要的功能是AOP 支持集成其他主流中间价框架
16、Struts拦截器和Spring AOP区别？
	struts2 拦截器采用xwork2的interceptor！而spring的AOP基于IoC基础,其底层采用动态代理与CGLIB代理两种方式结合的实现方式。
17、spring框架的优点？
	IOC和AOP
	降低组件之间的耦合性
	提供单例模式支持
	对于主流应用框架提供集成支持
	可以自由选择Spring的部分或者全部
18、选择使用Spring框架的原因（Spring框架为企业级开发带来的好处有哪些）？
	同优点
19、持久层设计要考虑的问题有哪些？你用过的持久层框架有哪些？
	数据存储逻辑的分离，提供抽象化的数据访问接口。
	数据访问底层实现的分离，可以在不修改代码的情况下切换底层实现。
	资源管理和调度的分离，在数据访问层实现统一的资源调度（如缓存机制）。
	数据抽象，提供更面向对象的数据操作。
	Hibernate 全自动 可自动生成sql语句 自定义sql较为复杂
	Mybatis半自动 需程序员自定义sql
20、声明式事务
	不需要写代码，而是通过配置文件的形式进行事务的管理。
21、如何理解javaBean
	javabean是一种规范
	一个以get、set方法对外提供存取接口的类，就能叫做javabean