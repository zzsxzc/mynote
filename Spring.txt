JavaEE部分
Spring
1、说一下IOC和AOP 
	ioc是控制反转,把对象的创建控制权交给Spring来管理。
	aop是面向切面编程，把那些与业务无关，却为业务模块所共同调用的逻辑封装起来，便于减少系统的重复代码，降低模块间的耦合度，并有利于未来的可扩展性和可维护性。
2、Spring事务
	1、基于注解配置
		@Transactional
	2、事务的传播行为
		使用propogation指定事务的传播行为
			REQUIRED
			REQUIRED_NEW
	3、事务的隔离级别
		使用isolation指定事务的隔离级别
			最常用的取值为 READ_COMMITED 读已提交
	4、回滚条件
		默认对所有运行时一场进行回滚
	5、使用readOnly指定事务是否为只读
		表示这个事务只读取数据但不更新数据
		这样可以帮助数据库引擎优化事务
	6、timeout
		使用timeout指定强制回滚之前事务可以占用的时间
	7、基于XML配置		
3、介绍一下bean的生命周期
	（1）实例化（必须的）构造函数构造对象
	（2）装配（可选的）为属性赋值
	（3）回调（可选的）（容器-控制类和组件-回调类）
	（4）初始化(init-method=" ")
	（5）就绪
	（6）销毁（destroy-method=" "） 
4、请问Spring中Bean的作用域有哪些？
	Spring中Bean有五种scope，singleton prototype request session globalSession
	1 singleton为默认值，IOC容器中仅存在一个Bean实例，Bean都以单例模式存在
	2 prototype，在每次请求获取Bean的时候，都会创建一个新的实例，它在容器初始化的时候不会创建实例，采用的是延迟加载的形式注入Bean，当你使用的时候，才会进行实例化，每次实例化获取的对象都不是同一个 就像BeanFactory的实例化模式 实例不唯一
	3 request，在每一次http请求时会创建一个实例，该实例仅在当前http request有效
	4 session，在每一次http请求时会创建一个实例，该实例仅在当前http session有效
	5 globalSession，全局Session，供不同的portlet共享，portlet好像是类似于servlet的Web组件
5、谈谈Spring中自动装配的方式有哪些？
	no：不进行自动装配，手动设置Bean的依赖关系。
	byName：根据Bean的名字进行自动装配。
	byType：根据Bean的类型进行自动装配。
	constructor：类似于byType，不过是应用于构造器的参数，如果正好有一个Bean与构造器的参数类型相同则可以自动装配，否则会导致错误。
	autodetect：如果有默认的构造器，则通过constructor的方式进行自动装配，否则使用byType的方式进行自动装配
6、你如何理解AOP中的连接点（Joinpoint）、切点（Pointcut）、增强（Advice）、引介（Introduction）、织入（Weaving）、切面（Aspect）这些概念？
	连接点：程序执行的的某个特定位置
	切点:查询条件，根据切点找到连接点
	增强:织入到目标连接点上的一段程序代码
	引介:特殊的增强,为类添加一些属性和方法。
	织入:将增强添加到连接点的过程
	切面:和连接点同义
7、spring框架的优点？
	IOC和AOP
	降低组件之间的耦合性
	提供单例模式支持
	对于主流应用框架提供集成支持
	可以自由选择Spring的部分或者全部
8、如何理解javaBean
	javabean是一种规范
	一个以get、set方法对外提供存取接口的类，就能叫做javabean